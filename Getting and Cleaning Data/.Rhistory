source('~/GitHub/datasciencecoursera/R Programming/Programming Assignment 2/cachemean.R')
a <- makevector(c(34,2,5,12,1))
a <- makeVector(c(34,2,5,12,1))
cachemean(a)
?solve
?matrix
m <- matrix(c(-1, -1,1,1),2,2)
solve(m)
m <- matrix(c(-1, -2,1,1),2,2)
solve(m)
source('~/GitHub/datasciencecoursera/R Programming/Programming Assignment 2/cachematrix.R')
cachesolve(m)
cacheSolve(m)
source('~/GitHub/datasciencecoursera/R Programming/Programming Assignment 2/cachematrix.R')
cacheSolve(m)
source('~/GitHub/datasciencecoursera/R Programming/Programming Assignment 2/cachematrix.R')
cacheSolve(m)
makeCacheMatrix(m)
source('~/GitHub/datasciencecoursera/R Programming/Programming Assignment 2/cachematrix.R')
makeCacheMatrix(m)
m <- matrix(c(-1, -2,1,1),2,2)
makeCacheMatrix(m)
cacheSolve(m)
x$get()
x <- makeCacheMatrix(m)
x$get()
x$getinverse()
cacheSolve(x)
cacheSolve(a)
source('~/GitHub/datasciencecoursera/R Programming/Programming Assignment 2/cachematrix.R')
source('~/GitHub/datasciencecoursera/R Programming/Programming Assignment 2/cachematrix.R')
library(datasets)
data(iris)
?iris
mean(iris$Sepal.Length)
library(swirl)
swirl()
5 +7
skip
quit()
swirl()
library(swirl)
swirl()
head(flags)
dim(flags)
quit()
set.seed(1)
rpois(5,2)
?seed
?set
?set.seed
?dpois
library(swirl)
swirl
swirl()
class(flags)
lapply(flags,class)
cls_list <- lapply(flags,class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- lapply(flags, class)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
setwd("~/GitHub/datasciencecoursera/Getting and Cleaning Data")
library(httr)
source('~/GitHub/datasciencecoursera/Getting and Cleaning Data/GithubGetDate.R')
source('~/GitHub/datasciencecoursera/Getting and Cleaning Data/GithubGetDate.R')
source('~/GitHub/datasciencecoursera/Getting and Cleaning Data/GithubGetDate.R')
source('~/GitHub/datasciencecoursera/Getting and Cleaning Data/GithubGetDate.R')
source('~/GitHub/datasciencecoursera/Getting and Cleaning Data/GithubGetDate.R')
library(sqldf)
install.packages("sqldf")
?sqldf
??sqldf
library(sqldf)
?install.packages
install.packages(c("gsubfn", "proto", "RSQLite", "DBI"))
install.packages(c("gsubfn", "proto", "RSQLite", "DBI"))
library(sqldf)
install.packages(c("gsubfn", "proto", "RSQLite", "DBI"))
